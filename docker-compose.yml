services:
  postgres:
    image: postgres:15
    container_name: weather_postgres
    environment:
      POSTGRES_DB: weather_db
      POSTGRES_USER: metabase
      POSTGRES_PASSWORD: weather_pass_2024
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - weather_network
    restart: unless-stopped

  metabase:
    image: metabase/metabase:latest
    container_name: weather_metabase
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: weather_db
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: weather_pass_2024
      MB_DB_HOST: postgres
      MB_JAVA_TIMEZONE: Europe/Bucharest
    depends_on:
      - postgres
    networks:
      - weather_network
    volumes:
      - metabase_data:/metabase-data
    restart: unless-stopped

  weather_loader:
    build: ./data
    container_name: weather_loader
    environment:
      DB_HOST: postgres
      DB_NAME: weather_db
      DB_USER: metabase
      DB_PASS: weather_pass_2024
      OPENWEATHER_API_KEY: your_api_key_here
    depends_on:
      - postgres
    networks:
      - weather_network
    volumes:
      - ./data:/app
    restart: "no"
    profiles:
      - loader

networks:
  weather_network:
    driver: bridge

volumes:
  postgres_data:
  metabase_data: